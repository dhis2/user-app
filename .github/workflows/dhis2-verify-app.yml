name: 'dhis2: verify (app)'

# Requirements:
#
# - Org secrets:
#       DHIS2_BOT_GITHUB_TOKEN
#       DHIS2_BOT_APPHUB_TOKEN
# - Enable the 'jobs.e2e' section if applicable
# - Customize the properties if needed:
#       'jobs.release.steps.*.cwd'
#       'jobs.release.steps.*.build-dir'

on:
    push:
    pull_request:
        types: [labeled]

concurrency:
    group: ${{ github.workflow}}-${{ github.ref }}

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    D2_VERBOSE: true

jobs:
    setup-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.specs }}
        steps:
            - uses: actions/checkout@v3
            - name: Generate test matrix
              id: set-matrix
              run: |
                  node cypress/support/generateTestMatrix.js > matrix.json
                  echo "::set-output name=specs::$(cat matrix.json)"

    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install
              run: yarn install --frozen-lockfile

            - name: Build
              run: yarn d2-app-scripts build

            - uses: actions/upload-artifact@v3
              with:
                  name: app-build
                  path: |
                      **/build
                      !**/node_modules
                  retention-days: 1

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install
              run: yarn install --frozen-lockfile

            # Can be removed if translations aren't required for tests,
            # or if not using the App Platform
            - name: Generate translations
              run: yarn d2-app-scripts i18n generate

            - name: Lint
              run: yarn d2-style check

    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Install
              run: yarn install --frozen-lockfile

            # Can be removed if translations aren't required for tests,
            # or if not using the App Platform
            - name: Generate translations
              run: yarn d2-app-scripts i18n generate

            - name: Test
              run: yarn d2-app-scripts test

    e2e:
        runs-on: ubuntu-latest
        if: "!github.event.push.repository.fork && github.actor != 'dependabot[bot]'"
        needs: [build, lint, test, setup-matrix]

        strategy:
            fail-fast: false
            matrix:
                spec-group: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}

        env:
            SHOULD_RECORD: ${{ contains(github.event.head_commit.message, '[e2e record]') || contains(join(github.event.pull_request.labels.*.name), 'e2e record') }}

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('patches/*.patch') }}

            - name: Set Cypress Record Environment Variables
              if: env.SHOULD_RECORD == 'true'
              run: |
                  echo "CYPRESS_GROUP=e2e-${{ matrix.spec-group.id }}" >> $GITHUB_ENV
                  echo "CYPRESS_TAG=${{ github.event_name }}" >> $GITHUB_ENV
                  echo "CYPRESS_CI_BUILD_ID=${{ github.run_id }}" >> $GITHUB_ENV

            - name: Debug Environment Variables
              run: |
                  echo "SHOULD_RECORD=${{ env.SHOULD_RECORD }}"
                  echo "CI Build ID=${{ github.run_id }}"
                  echo "Computed Group=${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_GROUP || '' }}"
                  echo "Computed Tag=${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_TAG || '' }}"
                  echo "Computed CI Build ID=${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_CI_BUILD_ID || '' }}"
                  echo "Spec=${{ join(matrix.spec-group.tests, ',') }}"

            - name: End-to-End tests
              uses: cypress-io/github-action@v2
              with:
                  start: yarn d2-app-scripts start
                  wait-on: 'http://localhost:3000'
                  wait-on-timeout: 300
                  record: ${{ env.SHOULD_RECORD }}
                  parallel: ${{ env.SHOULD_RECORD }}
                  group: ${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_GROUP || '' }}
                  tag: ${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_TAG || '' }}
                  ci-build-id: ${{ env.SHOULD_RECORD == 'true' && env.CYPRESS_CI_BUILD_ID || '' }}
              env:
                  BROWSER: none
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  CYPRESS_dhis2BaseUrl: http://localhost:8080
                  CYPRESS_dhis2ApiVersion: 41
                  CYPRESS_networkMode: stub

    release:
        runs-on: ubuntu-latest
        needs: [build, lint, test] # add e2e if you use it
        if: "!github.event.push.repository.fork && github.actor != 'dependabot[bot]'"
        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}

            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: 'yarn'

            - uses: actions/download-artifact@v3
              with:
                  name: app-build

            # ensure that d2-app-scripts is available
            - run: yarn install --frozen-lockfile

            - uses: dhis2/action-semantic-release@master
              with:
                  publish-apphub: true
                  publish-github: true
                  github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
                  apphub-token: ${{ secrets.DHIS2_BOT_APPHUB_TOKEN }}

            - uses: dhis2/deploy-build@master
              with:
                  # uncomment following line for monorepo apps:
                  #cwd: ./packages/app
                  build-dir: build/app
                  github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
